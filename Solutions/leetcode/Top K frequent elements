class Solution:
    def topKFrequent(self, words: List[str], k: int) -> List[str]:
        counts = Counter(words)

        counts = sorted(counts.items(), key=lambda x : x[1], reverse=True)

        buckets = defaultdict(list)

        for word, count in counts:
            buckets[count].append(word)
        

        result = []

        for bucket in buckets.values():
            result.extend(sorted(bucket))
        
        return result[:k]
        
